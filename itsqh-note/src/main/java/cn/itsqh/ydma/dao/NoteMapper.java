package cn.itsqh.ydma.dao;

import cn.itsqh.ydma.entity.Note;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface NoteMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @Delete({
        "delete from note",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @Insert({
        "insert into note (publish_time, like_count, ",
        "user_id, video_id, ",
        "title, context)",
        "values (#{publishTime,jdbcType=TIMESTAMP}, #{likeCount,jdbcType=INTEGER}, ",
        "#{userId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, ",
        "#{title,jdbcType=VARCHAR}, #{context,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Note record);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @InsertProvider(type=NoteSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(Note record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @Select({
        "select",
        "id, publish_time, like_count, user_id, video_id, title, context",
        "from note",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="publish_time", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="like_count", property="likeCount", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="video_id", property="videoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARCHAR)
    })
    Note selectByPrimaryKey(Integer id);
    
    
    /**
     * 	根据视频id查询笔记
     * @param video_id 视频id
     * @return	
     */
    @Select({
        "select",
        "id, publish_time, like_count, user_id, video_id, title, context",
        "from note",
        "where video_id = #{video_id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="publish_time", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="like_count", property="likeCount", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="video_id", property="videoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Note> selectByVideoId(Integer video_id);
    
    
    /**
     * 	根据视频id和用户id查询笔记
     * @param user_id	用户id
     * @param video_id	视频id
     * @return
     */
    @Select({
        "select",
        "id, publish_time, like_count, user_id, video_id, title, context",
        "from note",
        "where user_id = #{user_id,jdbcType=INTEGER}",
        "and video_id = #{video_id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="publish_time", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="like_count", property="likeCount", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="video_id", property="videoId", jdbcType=JdbcType.INTEGER),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Note> selectByUserIdAndVideoId(Integer user_id, Integer video_id);
    

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @UpdateProvider(type=NoteSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Note record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @Update({
        "update note",
        "set publish_time = #{publishTime,jdbcType=TIMESTAMP},",
          "like_count = #{likeCount,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "video_id = #{videoId,jdbcType=INTEGER},",
          "title = #{title,jdbcType=VARCHAR},",
          "context = #{context,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(Note record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note
     *
     * @mbg.generated Mon Jul 08 16:16:07 CST 2019
     */
    @Update({
        "update note",
        "set publish_time = #{publishTime,jdbcType=TIMESTAMP},",
          "like_count = #{likeCount,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "video_id = #{videoId,jdbcType=INTEGER},",
          "title = #{title,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Note record);
}